{{- $values := .Values -}}

{{- range $i, $statsd := .Values.statsd -}}
{{ if ne $i 0 }}---{{ end }}

apiVersion: apps/v1
kind: Deployment
metadata:
  fullName: {{ printf "%s" $statsd.fullName }}
  labels:
{{- include "statsd-exporter.labels" . | nindent 4 }}
    name: {{ printf "%s" $statsd.name }}
spec:
  replicas: {{ $values.replicaCount }}
  selector:
    matchLabels:
      name: {{ printf "%s" $statsd.name }}
  template:
    metadata:
      labels:
        name: {{ printf "%s" $statsd.name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") $ | sha256sum }}
    spec:
      volumes:
        - name: statsd-mapping-config
          configMap:
            name: { { printf "%s" $statsd.fullName } }
            items:
              - key: statsd.mappingConf
                path: statsd-mapping.conf
{{- if $statsd.mappingConfig }}
          volumeMounts:
          - name: statsd-mapping-config
            mountPath: /etc/prometheus-statsd-exporter
{{- end }}
      containers:
        - name: {{ printf "%s" $statsd.name }}
          image: "{{ $values.image.repository }}:{{ default .Chart.AppVersion $values.image.tag }}"
          imagePullPolicy: {{ $values.image.pullPolicy }}
          args:
            - --web.listen-address=:{{ $values.metrics.port }}
            - --web.telemetry-path={{ $values.metrics.path }}
            - --statsd.cache-size={{ $statsd.cacheSize }}
            - --statsd.event-queue-size={{ $statsd.eventQueueSize }}
            - --statsd.event-flush-threshold={{ $statsd.eventFlushThreshold }}
            - --statsd.event-flush-interval={{ $statsd.eventFlushInterval }}
{{- if $statsd.mappingConfig }}
            - --statsd.mapping-config=/etc/prometheus-statsd-exporter/statsd-mapping.conf
{{- end }}
{{- if $statsd.tcpPort }}
            - --statsd.listen-tcp=:{{ $statsd.tcpPort }}
{{- end }}
{{- if $statsd.udpPort }}
            - --statsd.listen-udp=:{{ $statsd.udpPort }}
{{- end }}
          ports:
            - name: metrics
              containerPort: {{ $values.metrics.port }}
              protocol: TCP
{{- if $statsd.tcpPort }}
            - name: statsd-tcp
              containerPort: {{ $statsd.tcpPort }}
              protocol: TCP
{{- end }}
{{- if $statsd.udpPort }}
            - name: statsd-udp
              containerPort: {{ $statsd.udpPort }}
              protocol: UDP
{{- end }}
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: metrics
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /-/ready
              port: metrics
            initialDelaySeconds: 30
            periodSeconds: 30
          resources:
            {{- toYaml $statsd.resources | nindent 12 }}
---
{{ end -}}