{{- if .Values.global.enable_kvm }}
{{- $hypervisor := merge .Values.defaults.hypervisor.kvm .Values.defaults.hypervisor.common }}
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: nova-compute-kvm
  labels:
    system: openstack
    type: backend
    component: nova
spec:
  revisionHistoryLimit: {{ .Values.pod.lifecycle.upgrades.deployments.revision_history }}
  selector:
    matchLabels:
      name: nova-compute-kvm
  template:
    metadata:
      labels:
{{ tuple . "nova" "compute" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
        name: nova-compute-kvm
        alert-tier: os
        alert-service: nova
        hypervisor: "kvm"
      annotations:
        configmap-etc-hash: {{ include (print .Template.BasePath "/etc-configmap.yaml") . | sha256sum }}
        configmap-kvm-etc-hash: {{ include "kvm_configmap" . | sha256sum }}
    spec:
      terminationGracePeriodSeconds: {{ $hypervisor.default.graceful_shutdown_timeout | default .Values.defaults.default.graceful_shutdown_timeout | add 5 }}
      hostNetwork: true
      hostPID: true
      hostIPC: true
      tolerations:
      - key: "species"
        operator: "Equal"
        value: "hypervisor"
        effect: "NoSchedule"
      nodeSelector:
        species: hypervisor
{{- if not .Values.hypervisor_on_host }}
      initContainers:
      - name: fix-permssion-instance-volume
        image: {{ required ".Values.global.dockerHubMirror is missing" .Values.global.dockerHubMirror }}/library/busybox
        command: ["sh", "-c", "chown -R 42424:42424 /var/lib/nova/instances"]
        volumeMounts:
        - mountPath: /var/lib/nova/instances
          name: instances
      - name: load-kernel-mod
        image: {{ required ".Values.global.dockerHubMirror is missing" .Values.global.dockerHubMirror }}/library/busybox
        command:
        - modprobe
        - kvm
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
{{- end }}
      containers:
        - name: nova-compute
          image: {{ tuple . "compute" | include "container_image_nova" }}
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
            runAsUser: 42436 # 42424
            runAsGroup: 42436 # 42424
          lifecycle:
            postStart:
              exec:
               command: ["/bin/bash", "-c", "chmod 0755 /usr/local/sbin/*"]
          command:
          - "nova-compute"
          env:
          {{- if .Values.sentry.enabled }}
          - name: SENTRY_DSN
            valueFrom:
              secretKeyRef:
                name: sentry
                key: {{ .Chart.Name }}.DSN.python
            {{- end }}
{{- if or $hypervisor.python_warnings .Values.python_warnings }}
          - name: PYTHONWARNINGS
            value: {{ or $hypervisor.python_warnings .Values.python_warnings | quote }}
{{- end }}
          volumeMounts:
          - mountPath: /var/lib/nova/instances
            name: instances
          - mountPath: /var/lib/libvirt
            name: libvirt
            readOnly: true
          - mountPath: /run
            name: run
          - mountPath: /etc/nova
            name: nova-etc
            readOnly: true
          - mountPath: /var/lib/nova/.nova
            name: hypervisor-config
            readOnly: true
          - mountPath: /var/lib/nova/mnt
            mountPropagation: Bidirectional
            name: mnt
          - mountPath: /var/lib/nfs
            name: nfs
          - mountPath: /sys
            name: sys
          - mountPath: /etc/multipath
            name: multipath-etc
          - mountPath: /etc/iscsi
            name: iscsi-etc
          - mountPath: /usr/local/sbin
            name: nova-bin
            mode: 0755
          - mountPath: /host
            name: host
{{- if not .Values.hypervisor_on_host }}
        - name: nova-libvirt
          image: {{ tuple . "libvirt" | include "container_image_nova" }}
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          command:
          - /container.init/nova-libvirt-start
          env:
          {{- if .Values.sentry.enabled }}
          - name: SENTRY_DSN
            valueFrom:
              secretKeyRef:
                name: sentry
                key: {{ .Chart.Name }}.DSN.python
          {{- end }}
          volumeMounts:
          - mountPath: /var/lib/nova/instances
            name: instances
          - mountPath: /var/lib/libvirt
            name: libvirt
          - mountPath: /run
            name: run
          - mountPath: /etc/nova
            name: nova-etc
            readOnly: true
          - mountPath: /var/lib/nova/.nova
            name: hypervisor-config
            readOnly: true
          - mountPath: /etc/libvirt
            name: etclibvirt
          - mountPath: /etc/libvirt/libvirtd.conf
            name: hypervisor-config
            subPath: libvirtd.conf
            readOnly: true
          - mountPath: /container.init
            name: nova-bin
        - name: nova-virtlog
          image: {{ tuple . "libvirt" | include "container_image_nova" }}
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          command:
          - /usr/sbin/virtlogd
          env:
          {{- if .Values.sentry.enabled }}
          - name: SENTRY_DSN
            valueFrom:
              secretKeyRef:
                name: sentry
                key: {{ .Chart.Name }}.DSN.python
          {{- end }}
          volumeMounts:
          - mountPath: /var/lib/nova/instances
            name: instances
          - mountPath: /var/lib/libvirt
            name: libvirt
          - mountPath: /var/run
            name: run
          - mountPath: /etc/nova
            name: etcnova
          - mountPath: /etc/nova/nova.conf
            name: nova-etc
            subPath: nova.conf
            readOnly: true
          {{- /* Note I533984: Replace with plain policy.yaml after Xena upgrade */}}
          - mountPath: /etc/nova/{{if (.Values.imageVersion | hasPrefix "rocky") }}policy.json{{else}}policy.yaml{{end}}
            name: nova-etc
            subPath: {{if (.Values.imageVersion | hasPrefix "rocky") }}policy.json{{else}}policy.yaml{{end}}
            readOnly: true
          - mountPath: /etc/nova/logging.ini
            name: nova-etc
            subPath: logging.ini
            readOnly: true
          - mountPath: /etc/libvirt
            name: etclibvirt
          - mountPath: /etc/libvirt/libvirtd.conf
            name: hypervisor-config
            subPath: libvirtd.conf
            readOnly: true
          - mountPath: /container.init
            name: nova-bin
{{- end }}
      volumes:
{{- if not .Values.hypervisor_on_host }}
      - name: instances
        persistentVolumeClaim:
          claimName: nova-kvm-shared
      - name: libvirt
        emptyDir:
          medium: Memory
      - name: run
        emptyDir:
          medium: Memory
      - name: modules
        hostPath:
          path: /lib/modules
      - name: etclibvirt
        emptyDir: {}
{{- else }}
      - name: instances
        hostPath:
          path: /var/lib/nova/instances
      - name: libvirt
        hostPath:
          path: /var/lib/libvirt
      - name: run
        hostPath:
          path: /run
      - name: host
        hostPath:
          path: /
{{- end }}
      - name: mnt
{{- if not .Values.hypervisor_on_host }}
        emptyDir:
          medium: Memory
{{- else }}
        hostPath:
          path: /var/lib/nova/mnt
{{- end }}
      - name: sys
        hostPath:
          path: /sys
      - name: multipath-etc
        hostPath:
          path: /etc/multipath
      - name: iscsi-etc
        hostPath:
          path: /etc/iscsi
      - name: nfs
        hostPath:
          path: /var/lib/nfs
      - name: hypervisor-config
        configMap:
          name: nova-compute-kvm
      - name: etcnova
        emptyDir: {}
      - name: nova-etc
        configMap:
          name: nova-etc
      - name: nova-bin
        configMap:
          name: nova-bin
          defaultMode: 0755
{{- end }}
