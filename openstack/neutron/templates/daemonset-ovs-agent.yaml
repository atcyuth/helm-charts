{{- if .Values.global.enable_kvm }}
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: neutron-ovs-agent
  labels:
    system: openstack
    type: backend
    component: neutron
spec:
  revisionHistoryLimit: {{ .Values.pod.lifecycle.upgrades.deployments.revision_history }}
  selector:
    matchLabels:
      name: neutron-ovs-agent
  template:
    metadata:
      labels:
{{ tuple . "neutron" "ovs-agent" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
        name: neutron-ovs-agent
        alert-tier: os
        alert-service: neutron
        hypervisor: "kvm"
      annotations:
        configmap-etc-hash: {{ include (print $.Template.BasePath "/configmap-etc.yaml") . | sha256sum }}
    spec:
      hostNetwork: true
      hostPID: true
      hostIPC: true
      tolerations:
      - key: "species"
        operator: "Equal"
        value: "hypervisor"
        effect: "NoSchedule"
      nodeSelector:
        species: hypervisor
{{- if not .Values.hypervisor_on_host }}
      initContainers:
      - name: load-kernel-mod
        image: {{ required ".Values.global.dockerHubMirror is missing" .Values.global.dockerHubMirror }}/library/busybox
        command:
        - modprobe
        - openvswitch
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
{{- end }}
      containers:
        - name: neutron-openvswitch-agent
          image: {{ required ".Values.global.registry is missing" .Values.global.registry }}/loci-neutron:{{ .Values.imageVersion | required "Please set imageVersion or similar" }}
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          command:
          - bash
          - /container.init/neutron-openvswitch-agent-start
          env:
          - name: SENTRY_DSN
            valueFrom:
            secretKeyRef:
              name: sentry
              key: neutron.DSN.python
          volumeMounts:
          - mountPath: /neutron-etc
            name: neutron-etc
          - mountPath: /container.init
            name: neutron-container-init
          - mountPath: /run
            name: run
          - mountPath: /lib/modules
            name: modules
            readOnly: true
{{- if not .Values.hypervisor_on_host }}
        - name: ovs
          image: {{ required ".Values.global.registry is missing" .Values.global.registry }}/loci-neutron:{{ .Values.imageVersion | required "Please set imageVersion or similar" }}
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          command:
          - /container.init/neutron-ovs-start
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /lib/modules
            name: modules
            readOnly: true
          - mountPath: /container.init
            name: neutron-container-init
        - name: ovs-db
          image: {{ required ".Values.global.registry is missing" .Values.global.registry }}/loci-neutron-openvswitch:{{ .Values.imageVersion | required "Please set .mageVersion or similar" }}
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          command:
          - /container.init/neutron-ovs-db-start
          env:
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /container.init
            name: neutron-container-init
{{- end }}
      volumes:
      - name: run
{{- if not .Values.hypervisor_on_host }}
        emptyDir:
          medium: Memory
{{- else }}
        hostPath:
          path: /run
{{- end }}
      - name: modules
        hostPath:
          path: /lib/modules
      - name: neutron-etc
        configMap:
          name: neutron-etc
      - name: neutron-container-init
        configMap:
          name: neutron-bin
          defaultMode: 0755
{{- end }}
